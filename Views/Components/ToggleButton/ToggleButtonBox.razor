@using System.ComponentModel.DataAnnotations
@using MichaelKjellander.IndependentUtils.Collections
@using MichaelKjellander.Views.Services
@using MichaelKjellander.Views.Components.Icons
@inject JsService Js

<span class="font-bold">
    <span class="w-6">@Title</span>
    @if (Indexer is { Values.Count: > 0 })
    {
        <span class="px-2">
            <button @onclick="Clear">
                <IconX/>
            </button>
        </span>
    }
</span>
<div></div>
<div @ref="_ref" class="sg-toggle-button-container">
    @ChildContent
</div>

@code {
    [Parameter, Required] public RenderFragment? ChildContent { get; set; }
    [Parameter, Required] public string Title { get; set; } = "";
    [Parameter, Required] public Indexer<int>? Indexer { get; set; }
    [Parameter, Required] public EventCallback OnClear { get; set; }

    private ElementReference _ref;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Js.AttachDraggable(_ref);
        }
    }

    private void Clear()
    {
        Indexer!.Clear();
        OnClear.InvokeAsync();
    }
}
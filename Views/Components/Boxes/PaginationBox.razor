@using System.ComponentModel.DataAnnotations
@using MichaelKjellander.Domains.ApiResponse
@using MichaelKjellander.Views.Components.Buttons
@using MichaelKjellander.Views.Components.Icons
@inject NavigationManager Navigation;
@rendermode InteractiveServer

@if (PaginationData != null && @PaginationData.NumPages > 1 && _visiblePages != null)
{
    <div class="grid grid-cols-12 bg-white pagination-box">
        <div class="col-span-1">
            <RefreshLink Class="btn btn-default button" Href="">
                <ArrowLeft/>
            </RefreshLink>
        </div>
        <div class="py-4 text-center col-span-10">
            @foreach (int pageNumber in _visiblePages)
            {
                string linkCopy = GetLink(pageNumber);
                <RefreshLink Class="@("px-4 text-xl sg-font-sans " + (IsCurrent(pageNumber) ? "font-bold" : ""))" Href="@linkCopy">
                    @pageNumber
                </RefreshLink>
            }
        </div>
        <div class="col-span-1">
            <button class="btn btn-default">
                <ArrowRight/>
            </button>
        </div>
    </div>
}

@code {
    [Parameter] [Required] public PaginationData? PaginationData { get; set; }
    [Parameter] [Required] public string? UrlPrefix { get; set; }
    [Parameter] public string? FirstUrlPrefix { get; set; }
    [Parameter] public string? Query { get; set; }

    private List<int>? _visiblePages = null;

    private class PageData
    {
        public int Page;
        public bool IsCurrent;
        public string Link = "";
    }

    private bool IsCurrent(int pageNumber)
    {
        int currentPage = PaginationData!.CurrentPage;
        return pageNumber == currentPage;
    }

    private string GetLink(int pageNumber)
    {
        FirstUrlPrefix ??= UrlPrefix;
        string queryString = Query ?? ""; //new Url(Navigation.Uri).GetQueryString();
        if (pageNumber == 1)
        {
            return FirstUrlPrefix! + queryString;
        }

        return UrlPrefix + "/" + pageNumber + queryString;
    }

    protected override void OnParametersSet()
    {
        if (PaginationData == null)
        {
            return;
        }

        _visiblePages = [];


        //Yes, I want all pages
        for (int pageNumber = 1; pageNumber <= PaginationData.NumPages; pageNumber++)
        {
            _visiblePages.Add(pageNumber);
        }
    }

}
@page "/"
@using MichaelKjellander.Models.Wordpress
@inject IHttpClientFactory ClientFactory
@using MichaelKjellander.Utils
@using MichaelKjellander.Components.Icons

<PageTitle>Michael Kjellander</PageTitle>

<div class="bg-white sg-title-section">
    <div class="sg-title-section-side"></div>
    <div class="py-5 px-5">
        <h1 class="text-2xl fw-bold">Välkommen till michaelkjellander.se!</h1>
        <div class="h-4"></div>
        <h2 class="text-slate-500">
            Här postar jag tv-spelrecensioner och annat!
        </h2>
    </div>
</div>


@if (posts != null)
{
    @foreach (var post in posts)
    {
        <article class="border-1 border-gray-200 mt-16">
            @if (@post.FeaturedMedia != null)
            {
                <img src="@post.FeaturedMedia.PostThumbnailUrl"/>
            }
            <div class="bg-white  sg-post p-20 ">
                <span class="italic ">@post.Category.Name</span>
                <div class="h-2"></div>
                <h3 class="text-4xl fw-bolder">@post.Title</h3>
                <div class="sg-post-content">
                    @((MarkupString)@post.Content)
                </div>
            </div>
            <div class="px-20 py-10 bg-gray-100">
                <p>
                    <IconCalendarMonth/>
                    <span class="mr-4">@post.Date</span>
                    <IconFolder/>
                    <span class="mr-4">@post.Category.Name</span>
                </p>
            </div>
        </article>
    }
}


@code {
    //private ICollection<WpApiCategory>? categories;
    private ICollection<WpApiPost>? posts;

    //TODO: move all to media util
    protected override async Task OnInitializedAsync()
    {
        var client = ClientFactory.CreateClient();
        var categories = await GetCategories(client);
        await GetPosts(client);
        ModelUtil.MapCategoriesToPosts(categories!, posts!);

        var mediaIds = new HashSet<int>();
        foreach (var post in posts)
        {
            if (post.FeaturedMediaId != 0)
            {
                mediaIds.Add(post.FeaturedMediaId);
            }
        }
        var mediaIdsString = string.Join(",", mediaIds);
        var json = await ApiUtil.FetchWp($"media?include={mediaIdsString}", client);
        var medias = JsonUtil.ParseList<WpApiMedia>(json);
        
        foreach (var post in posts)
        {
            post.FindAndSetFeaturedMedia(medias);
        }
    }

    private async Task<ICollection<WpApiCategory>> GetCategories(HttpClient client)
    {
        var json = await ApiUtil.FetchWp("categories", client);
        return JsonUtil.ParseList<WpApiCategory>(json);
    }

    private async Task GetPosts(HttpClient client)
    {
        var json = await ApiUtil.FetchWp("posts?per_page=2", client);
        posts = JsonUtil.ParseList<WpApiPost>(json);
    }

}
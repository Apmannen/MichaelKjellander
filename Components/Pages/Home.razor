@page "/"
@using MichaelKjellander.Models.Wordpress
@inject IHttpClientFactory ClientFactory
@using MichaelKjellander.Components.Icons
@using MichaelKjellander.Data
@using MichaelKjellander.SharedUtils
@using MichaelKjellander.SharedUtils.Api
@inject Microsoft.Extensions.Options.IOptions<AppConfig> Options

<PageTitle>Michael Kjellanders hemsida</PageTitle>

<div class="bg-white sg-title-section">
    @*Borders ruins the padding*@
    <div class="sg-title-section-side hidden sm:block"></div>
    <div class="py-10 px-10 sm:px-20">
        <h1 class="text-2xl font-bold">Välkommen till Michael Kjellanders hemsida!</h1>
        <div class="h-4"></div>
        <h2 class="text-slate-500">
            Här postar jag tv-spelrecensioner och annat. Webbplatsen är byggd med Blazor med API-koppling mot min tidigare Wordpress-sajt. 
            Devmode: @Options.Value.IsDev, url: @Options.Value.SiteUrl
        </h2>
    </div>
</div>


@if (_posts != null)
{
    @foreach (var post in _posts)
    {
        <article class="border border-gray-200 sm:mt-16">
            @if (@post.FeaturedMedia != null)
            {
                <img src="@post.FeaturedMedia.PostThumbnailUrl"/>
            }
            <div class="bg-white sg-post p-10 sm:p-20">
                <span class="italic ">@post.Category!.Name</span>
                <div class="h-2"></div>
                <h3 class="text-4xl fw-bolder">@post.Title</h3>
                <div class="sg-post-content">
                    @((MarkupString)@post.Content!)
                </div>
            </div>
            <div class="px-20 py-10 bg-gray-100">
                <p>
                    <IconCalendarMonth/>
                    <span class="mr-4">@post.Date</span>
                    <IconFolder/>
                    <span class="mr-4">@post.Category.Name</span>
                    @if (post.TagIds!.Count > 0)
                    {
                        <IconTag/>
                        foreach (WpTag tag in post.Tags!)
                        {
                            @tag.Name
                        }
                    }
                </p>
            </div>
        </article>
    }
}

@if (_pagination != null)
{
    <div>Sida @_pagination.CurrentPage av @_pagination.NumPages</div>
}


@code {
    private ICollection<WpPost>? _posts;
    private PaginationData? _pagination;

    protected override async Task OnInitializedAsync()
    {
        InternalApiContext context = new InternalApiContext(ClientFactory.CreateClient(), Options);
        ApiResponse<WpPost> postData = await context.FetchPosts();
        this._posts = postData.Items;
        this._pagination = postData.PaginationData;
    }
}

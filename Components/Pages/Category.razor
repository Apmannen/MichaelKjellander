@page "/kategori/{Slug}"
@page "/kategori/{Slug}/{Page:int}"
@using MichaelKjellander.Models.Wordpress
@using MichaelKjellander.Services
@using MichaelKjellander.SharedUtils
@using MichaelKjellander.SharedUtils.Api
@using MichaelKjellander.Components.Boxes
@using MichaelKjellander.SharedUtils.Routes
@inject IHttpClientFactory ClientFactory
@inject Microsoft.Extensions.Options.IOptions<AppConfig> Options
@inject JsService JsService
@rendermode InteractiveServer

<PageTitle>
    @((_category != null ? _category.Name : "") + (Page > 1 ? "- Sida "+Page : "") + " - Michael Kjellander")
</PageTitle>

<PostBoxes Posts="_posts"/>

<PaginationBox paginationData="@_pagination" UrlPrefix="@_prefix"/>

@code {
    [Parameter] public string? Slug { get; set; }
    [Parameter] public int? Page { get; set; }
    private IList<WpPost>? _posts;
    private WpCategory? _category;
    private PaginationData? _pagination;
    private string? _prefix;

    protected override async Task OnInitializedAsync()
    {
        if (Slug == null)
        {
            return;
        }

        //TODO: INJECT
        InternalApiService service = new InternalApiService(ClientFactory.CreateClient(), Options);
        ApiResponse<WpPost> postsData = await service.FetchPosts(pageNumber: Page ?? 1, categorySlug: Slug);
        _posts = postsData.Items;
        _category = _posts?.FirstOrDefault()?.Category;
        _prefix = PageRoutes.Category(Slug);
        _pagination = postsData.PaginationData;
    }
    
    protected override void OnAfterRender(bool firstRender)
    {
        JsService.ScrollToTop();
    }
}
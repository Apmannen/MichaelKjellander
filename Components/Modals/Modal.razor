@using System.ComponentModel.DataAnnotations
@using MichaelKjellander.Services
@using MichaelKjellander.SharedUtils.Components
@inject JsService JsService

<div id="@ElementId" class="sg-modal-parent @(_show ? "flex" : "hidden")"  @onclick="HandleBackgroundClick">
    <div class="sg-modal bg-white p-10 relative">
        @ChildContent
    </div>
</div>


@code {
    [Parameter] [Required] public string? ElementId { get; set; }
    [Parameter] [Required] public RenderFragment? ChildContent { get; set; }
    [Parameter] public ComponentCallbacker? ShowCallbacker { get; set; }
    
    private bool _show = false;

    protected override void OnParametersSet()
    {
        if (ShowCallbacker != null)
        {
            ShowCallbacker.Action = Show;
        }
    }

    //TODO: try avoid reacting on parent child click. Try to find a better way than this workdaround.
    private async Task HandleBackgroundClick()
    {
        bool wasClicked = await JsService.WasClicked(ElementId!);
        if (wasClicked)
        {
            _show = false;
        }
    }

    private void Show()
    {
        _show = true;
        JsService.AttachExclusiveListener(ElementId!);
    }
}
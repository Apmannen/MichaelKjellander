@using System.ComponentModel.DataAnnotations
@inject IJSRuntime Js

<div @ref=_modalParentRef class="sg-modal-parent" data-active="@false">
    <div class="sg-modal bg-white p-10 relative">
        <div @ref=_contentContainerRef></div>
    </div>
</div>

@if (IncludeScript)
{
    <script>
        window.listenToClicksForActivatingTarget = function (targetElement, contentContainer) {
            const rootElement = targetElement.parentElement;
            const images = rootElement.getElementsByTagName("img");
            for(let image of images) {
                image.addEventListener("click", (event) => {
                    event.preventDefault();
                    targetElement.setAttribute("data-active", true);
                    const src = image.getAttribute("src");
                    const splits = src.split(/-[0-9]+x[0-9]+/);
                    let fullSizeSrc = src;
                    if(splits.length === 2) {
                        fullSizeSrc = splits[0]+splits[1];
                    }
                    contentContainer.innerHTML = "<img src='"+fullSizeSrc+"'>";

                    targetElement.addEventListener("click", (event) => {
                        if(event.target === targetElement) {
                            targetElement.removeAttribute("data-active");
                        }
                    });
                });
            }
        }
    </script>
}

@code {
    [Parameter, Required] public ElementReference Container { get; set; }
    [Parameter, Required] public bool IncludeScript { get; set; }

    private ElementReference _modalParentRef;
    private ElementReference _contentContainerRef;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            Js.InvokeVoidAsync("listenToClicksForActivatingTarget", _modalParentRef, _contentContainerRef);
        }
    }

}